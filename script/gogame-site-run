#!/usr/bin/env perl
use GoGameTools::features;
use GoGameTools::Util;
use File::Temp qw(tempdir);
my %opt = get_options(
    extra_opts => [
        qw(
          query|q=s dir|d=s menu|m=s@ metadata gameinfo annotations=s
          viewer=s serve)
    ],
    expect_stdin => 1,
);
$opt{dir} //= tempdir(CLEANUP => 0);
warn "$opt{dir}\n";
$opt{viewer} //= 'WGo';

# optional arguments that can be passed to gogame-* scripts
my (@gen_problems_args, @site_gen_data_args);
push @gen_problems_args, "--annotations $opt{annotations}"
  if defined $opt{annotations};
push @gen_problems_args, '--metadata' if $opt{metadata};
push @gen_problems_args, '--gameinfo' if $opt{gameinfo};
push @site_gen_data_args, map { "-m $_" } $opt{menus}->@*
  if defined $opt{menus};

# construct pipe
local $" = ' ';
my @pipe = (
    "gogame-gen-problems --viewer $opt{viewer} @gen_problems_args",
    (defined($opt{query}) ? "gogame-filter -q '$opt{query}'" : ()),
    "gogame-site-gen-data @site_gen_data_args",
    "gogame-site-write --viewer $opt{viewer} -d $opt{dir}",
);

# execute shell script, preserving STDIN
my $script = join(' | ', @pipe);
if ($opt{serve}) {
    warn "Open the site at http://0.0.0.0:8888\n";
    $script .= "; cd $opt{dir} && python -m SimpleHTTPServer 8888";
} else {
    $script .= "; open $opt{dir}/index.html";
}
exec($script);
