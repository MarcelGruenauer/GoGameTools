#!/usr/bin/env perl
use GoGameTools::features;
use GoGameTools::Util;
use File::Temp qw(tempfile tempdir);
my %opt = get_options(
    extra_opts => [
        qw(
          src=s www=s query|q=s menu|m=s@ metadata gameinfo
          viewer=s deprivatize serve open)
    ],
    required => [qw(src)],
);
$opt{viewer} //= 'WGo';
if ($opt{serve} && $opt{open}) {
    die "use only one of --serve or --open\n";
}
unless (-d $opt{src}) {
    die "$opt{src} is not a directory\n";
}
my $annotations;
(undef, $annotations) = tempfile();
$opt{www} //= tempdir(CLEANUP => 0);
say "GOGAME_SRC=$opt{src}";
say "GOGAME_ANNOTATIONS=$annotations";
say "GOGAME_WWW=$opt{www}";
say 'rm -f $GOGAME_SRC/kombilo.d[ab]';
say 'gogame-patterns-annotate -d $GOGAME_SRC >$GOGAME_ANNOTATIONS';
say 'rm -f $GOGAME_SRC/kombilo.d[ab]';    # cleanup

# optional arguments that can be passed to gogame-* scripts
my (@gen_problems_args, @munge_refs_args, @site_gen_data_args);
push @gen_problems_args,  '--annotations $GOGAME_ANNOTATIONS';
push @gen_problems_args,  '--metadata' if $opt{metadata};
push @gen_problems_args,  '--gameinfo' if $opt{gameinfo};
push @munge_refs_args,    '--deprivatize' if $opt{deprivatize};
push @site_gen_data_args, map { "-m $_" } $opt{menus}->@* if $opt{menus};

# construct pipe
local $" = ' ';
say join(' | ',
    'find $GOGAME_SRC -name \*.sgf',
    "gogame-gen-problems --viewer $opt{viewer} @gen_problems_args",
    "gogame-munge-refs @munge_refs_args",
    (defined($opt{query}) ? "gogame-filter -q '$opt{query}'" : ()),
    "gogame-site-gen-data @site_gen_data_args",
    "gogame-site-write --viewer $opt{viewer} -d \$GOGAME_WWW",
);
if ($opt{serve}) {
    say 'echo Open the site at http://0.0.0.0:8888';
    say 'cd $GOGAME_WWW && python -m SimpleHTTPServer 8888';
} elsif ($opt{open}) {
    say 'open $GOGAME_WWW/index.html';
}
