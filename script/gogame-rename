#!/usr/bin/env perl
use GoGameTools::features;
use GoGameTools::Plumbing;
use GoGameTools::Util;
use GoGameTools::Log;
my %opt = get_options(extra_opts => [qw(eval|e=s)], expect_stdin => 1);
run_pipe(
    pipe_flex_stdin_to_trees(),
    pipe_each(
        sub ($tree) {
            my $filename     = $tree->metadata->{filename};
            my $new_filename = $tree->gen_metadata_filename($opt{eval});
            say qq!mv -i "$filename" "$new_filename"!;
        }
    )
);

=pod

=head1 NAME

gogame-rename - print commands to rename SGF files

=head1 SYNOPSIS

    $ ls *.sgf | gogame-rename
    $ ls *.sgf | gogame-rename --eval \
        'qq[$v{year}.$v{month}.$v{day}-$v{PW}-$v{PB}.sgf]' | sh

    $ gogame-rename --man

=head1 DESCRIPTION

Takes an SGJ collection on STDIN and computes new names based on the metadata
and game information. It then either sets the new name into metadata or prints
shell commands to rename SGF files

The following command-line options are supported:

=over 4

=item C<--eval>, C<-e> C<< <string> >>

A perl command that returns the new filename as a string.

The C<%v> hash contains game information and metadata that you can use to
construct the filename. Keys and their values come from the SGJ trees that are
read from STDIN.

=item C<--help>, C<-h>

Prints the synopsis.

=item C<--man>

Prints the whole documentation.

=item C<--version>

Prints the program version.

=back
